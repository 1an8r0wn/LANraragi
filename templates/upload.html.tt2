<!DOCTYPE html>

<head>
	<title>[% title %] - Upload Center</title>

	<meta name="viewport" content="width=device-width" />
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

	<link type="image/png" rel="icon" href="favicon.ico" />
	<link rel="stylesheet" type="text/css" href="/css/lrr.css?[% version%]" />

	<link rel="stylesheet" type="text/css" href="./css/vendor/jquery.fileupload.css" />
	<link rel="stylesheet" type="text/css" href="./css/vendor/jquery.toast.min.css" />
	<link rel="stylesheet" type="text/css" href="./css/vendor/fontawesome-all.min.css" />
	[% csshead %]

	<script src="./js/vendor/jquery.min.js" type="text/JAVASCRIPT"></script>
	<script src="./js/vendor/jquery.toast.min.js" type="text/JAVASCRIPT"></script>
	<script src="./js/vendor/jquery.ui.widget.js" type="text/JAVASCRIPT"></script>
	<script src="./js/vendor/jquery.fileupload.js" type="text/JAVASCRIPT"></script>

	<script src="./js/theme.js?[% version%]" type="text/JAVASCRIPT"></script>
	<script src="./js/ajax.js?[% version%]" type="text/JAVASCRIPT"></script>

</head>

<body onload="initUpload()">

	<div class='ido' style='text-align:center; font-size:8pt'>
		<h1 class='ih' style='text-align:center'>Adding Archives to the Library</h1>

		Add files to your LANraragi instance from your computer, or the Internet directly.<br><br>

		<div style="margin-left:auto; margin-right:auto">

			<div class="left-column">

				Add uploaded files to category:
				<select id="category">
					<option selected value=""> -- No Category -- </option>
					[% FOREACH categories %]
					<option value="[% id %]">[% name %]</option>
					[% END %]
				</select> <br><br>

				<h1 class='ih'>From your computer</h1>

				You can drag and drop files into this window, or click the upload button.
				<br><br>

				<span class='stdbtn fileinput-button' style="height:50px;">
					<i class='fas fa-download fa-2x' style='padding-top:6px; padding-bottom: 5px'></i><br>
					<span>Add from your computer</span>
					<input type='file' name='file' multiple id='fileupload'>
				</span>

				<br><br>
				<h1 class='ih'>From the Internet</h1>

				You can download files from remote URLs directly into LANraragi from here.<br>
				Download jobs will keep going even if you close this window!<br><br>

				Type in the URL, and click the download button. <br>
				If a <a href="/config/plugins">Downloader plugin</a> is compatible with the URL, it'll be automatically
				used.<br><br>

				<form name="urlForm" id="urlForm" enctype="multipart/form-data" method="post">
					<label for="download_url">URL to download:</label>
					<input type="text" id="url" style="width:300px" name="url"><br><br>
				</form>

				<span class='stdbtn fileinput-button' style="height:50px;" onclick="downloadUrl()">
					<i class='fas fa-cloud-download-alt fa-2x' style='padding-top:6px; padding-bottom: 5px'></i><br>
					<span>Add from an URL</span>
				</span>

			</div>

			<div class="right-column">

				<table style='margin:auto; font-size:9pt; width: 80%; text-align:center;'>
					<tbody id='files'>
						<tr>
							<td colspan=2>
								<div id='progress' style='padding-top:6px; padding-bottom:6px'>
									<div class='bar' style='width: 0%;'></div>
								</div>
							</td>
						</tr>

					</tbody>
				</table>

			</div>
		</div>

		<input class='stdbtn' type='button' onclick="window.location.replace('./');" value='Return to Library' />
	</div>

	<script>

		function downloadUrl() {

			fetch("/api/download_url", {
				method: "POST",
				body: new FormData($("#urlForm")[0])
			})
				.then(response => response.json())
				.then((data) => {
					if (data.success) {
						result = `<tr><td><a href="#" id="${data.job}-name">${data.url}</a></td>
									<td><i id="${data.job}-icon" class='fa fa-spinner fa-spin' style='margin-left:20px; margin-right: 10px;'></i>
									<a href="#" id="${data.job}-link">Downloading file... (Job #${data.job})</a>
									</td>
								</tr>`;

						$('#files').append(result);

						// Check minion job state periodically to update the result 
						checkJobStatus(data.job, function (d) {

							$(`#${data.job}-name`).attr("href", `reader?id=${d.result.id}`);
							$(`#${data.job}-link`).html("Click here to edit metadata.(" + d.result.message + ")");
							$(`#${data.job}-link`).attr("href", `edit?id=${d.result.id}`);

							if (d.result.success) {
								$(`#${data.job}-icon`).attr("class", "fa fa-check-circle");
							} else {
								$(`#${data.job}-icon`).attr("class", "fa fa-exclamation-circle");
							}

							const categoryID = document.getElementById("category").value;
							if (categoryID !== "") {
								console.log(`Adding ${d.result.id} to category ${categoryID}`)
								addArchiveToCategory(d.result.id, categoryID);
							}
						})
					} else {
						throw new Error(data.message);
					}
				})
				.catch(error => showErrorToast("Error while adding download job", error));

		}

		function initUpload() {

			//Handler for file uploading.
			$('#fileupload').fileupload({
				dataType: 'json',
				done: function (e, data) {

					const categoryID = document.getElementById("category").value;

					if (data.result.success == 0)
						result = `<tr><td>${data.result.name}</td>
									  <td><i class='fa fa-exclamation-circle' style='margin-left:20px; margin-right: 10px; color: red'></i>${data.result.error}</td>
								  </tr>`;
					else
						result = `<tr><td><a href="#" id="${data.result.job}-name">${data.result.name}</a></td>
									  <td><i id="${data.result.job}-icon" class='fa fa-spinner fa-spin' style='margin-left:20px; margin-right: 10px;'></i>
										<a href="#" id="${data.result.job}-link">Processing file... (Job #${data.result.job})</a>
									  </td>
								  </tr>`;

					$('#progress .bar').css('width', '0%');
					$('#files').append(result);

					// Check minion job state periodically to update the result 
					checkJobStatus(data.result.job, function (d) {

						$(`#${data.result.job}-name`).attr("href", `reader?id=${d.result.id}`);
						$(`#${data.result.job}-link`).html("Click here to edit metadata.(" + d.result.message + ")");
						$(`#${data.result.job}-link`).attr("href", `edit?id=${d.result.id}`);

						if (d.result.success) {
							$(`#${data.result.job}-icon`).attr("class", "fa fa-check-circle");
						} else {
							$(`#${data.result.job}-icon`).attr("class", "fa fa-exclamation-circle");
						}

						if (categoryID !== "") {
							console.log(`Adding ${d.result.id} to category ${categoryID}`)
							addArchiveToCategory(d.result.id, categoryID);
						}
					})
				},

				fail: function (e, data) {
					result = `<tr><td>${data.result.name}</td>
									  <td><i class='fa fa-exclamation-circle' style='margin-left:20px; margin-right: 10px; color: red'></i>${data.errorThrown}</td>
								  </tr>`;
					$('#progress .bar').css('width', '0%');
					$('#files').append(result);
				},

				progressall: function (e, data) {
					var progress = parseInt(data.loaded / data.total * 100, 10);
					$('#progress .bar').css('width', progress + '%');
				}

			});

		}

	</script>

	[% INCLUDE footer %]
</body>

</html>